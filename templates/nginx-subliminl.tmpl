{{/* Loop over all webapps to create upstreams */}}
{{range ls "/webapps" }}
  {{ $service:= (base .) }}
  {{ $key:= printf "/services/__REGION__/%s" $service }}

  # Upstream for {{ $service }}
  {{ if ls $key }}
  upstream {{ $service }} {  {{range getvs (printf "%s/*" $key) }}
      server {{ . }};
  {{end}}  }
  {{end}}

{{end}}

# Prepare cache
proxy_cache_path /data/cache/nginx keys_zone=Subliminl:10m;

# Forward http to https
server {
  listen      [::]:80;
  listen      80;
  server_name subliminl.com www.subliminl.com;
  return 301 https://$host$request_uri;
}

# HTTPS server
server {
  listen      [::]:443 ssl spdy;
  listen      443 ssl spdy;
  server_name subliminl.com www.subliminl.com;

  keepalive_timeout   70;
  add_header          Alternate-Protocol  443:npn-spdy/2;

  # Setup SSL
  ssl_certificate /data/tls/server.crt;
  ssl_certificate_key /data/tls/server.key;

  {{/* Loop over all webapps to create location blocks */}}
  {{range gets "/webapps/*/location/*" }}
    {{ $service := base (parent (parent .Key)) }}
    {{ $key:= printf "/services/__REGION__/%s" $service }}
    {{ if ls $key }}

    location {{ .Value }} {
      proxy_pass http://{{ $service }};
      proxy_cache Subliminl;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Request-Start $msec;
    }
    {{end}}
  {{end}}

  error_page 502 /502.html;
  location /502.html {
    root  /public_html;
  }
}
